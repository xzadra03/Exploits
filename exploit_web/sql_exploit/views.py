from django.http import QueryDict
from django.shortcuts import render
from django.views.generic import ListView, CreateView
from .models import MyUser
import re
import time

class IntroView(ListView):
    model = MyUser
    template_name = 'index.html'
    searched_username = " "
    searched_password = " "
    query =  MyUser.objects.raw("SELECT * FROM sql_exploit_myuser")
    
    #this function returns match with required input
    def results(request):
        IntroView.searched_username = request.GET.get('search_text')
        IntroView.searched_password = request.GET.get('search_pass')
        req_time = time.time()
        
        if IntroView.searched_username == "" and IntroView.searched_password == "":
            IntroView.query =  MyUser.objects.raw("SELECT * FROM sql_exploit_myuser")
        #testing redos - yes it works: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa! should be enough
        elif re.match(r'^([a-zA-Z]+)*$', str(IntroView.searched_username)):
            query_string = "SELECT * FROM sql_exploit_myuser WHERE username = '%s' AND password = '%s'" % (IntroView.searched_username, IntroView.searched_password)
            IntroView.query = MyUser.objects.raw(query_string)
        else:
            IntroView.query =  MyUser.objects.raw("SELECT * FROM sql_exploit_myuser")
        
        final_time = time.time() - req_time
        return render(request, 'index.html', {'data': IntroView.query, 'time': final_time})
        
        if IntroView.searched_username is None and IntroView.searched_password is None:
            IntroView.query =  MyUser.objects.raw("SELECT * FROM sql_exploit_myuser")
        else:
            #malicious
            #query_string = "SELECT * FROM sql_exploit_myuser WHERE username = '%s' AND password = '%s'" % (IntroView.searched_username, IntroView.searched_password)
            #secure
            query_string = "SELECT * FROM sql_exploit_myuser WHERE username = {username} AND password = {password}".format(username=IntroView.searched_username, password=IntroView.searched_password)
            IntroView.query = MyUser.objects.raw(query_string)
        return render(request, 'index.html', {'data': IntroView.query})
    
class AddUserView(CreateView):
    model = MyUser
    template_name = 'add_user.html'
    fields = '__all__'